plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'jacoco'
}

group = 'com.yanjing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    compile.exclude module: "spring-boot-starter-logging"
}

repositories {
    mavenLocal()
    maven {
        url = 'https://maven.aliyun.com/repository/public'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile group: 'org.apache.flink', name: 'flink-core', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-streaming-java_2.12', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-connector-jdbc_2.12', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-table-api-java-bridge_2.12', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-table-planner-blink_2.12', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-clients_2.12', version: '1.13.1'
    compile group: 'org.apache.flink', name: 'flink-runtime-web_2.12', version: '1.13.1'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.99
            }
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
